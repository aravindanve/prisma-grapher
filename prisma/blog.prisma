generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "ts-node src/index.ts"
  output   = "../test/blog.svg"
  disabled = false
  title    = "Blog Schema"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  EDITOR
  AUTHOR
}

model User {
  id          Int              @id @default(autoincrement())
  name        String           @unique
  image       String?
  email       String           @unique
  password    String
  role        Role             @default(EDITOR)
  created     DateTime         @db.Timestamptz
  updated     DateTime         @db.Timestamptz
  posts       Post[]
  preferences UserPreferences?
}

model UserPreferences {
  user                 User     @relation(fields: [userId], references: [id])
  userId               Int      @unique
  notificationsEnabled Boolean
  created              DateTime @db.Timestamptz
  updated              DateTime @db.Timestamptz
}

model Category {
  id      Int      @id @default(autoincrement())
  name    String
  created DateTime @db.Timestamptz
  updated DateTime @db.Timestamptz
  posts   Post[]
}

model Tag {
  id      Int      @id @default(autoincrement())
  name    String
  created DateTime @db.Timestamptz
  updated DateTime @db.Timestamptz
  posts   Post[]
}

model Post {
  id         Int       @id @default(autoincrement())
  name       String
  author     User      @relation(fields: [authorId], references: [id])
  authorId   Int
  body       String
  published  Boolean   @default(false)
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId Int
  created    DateTime  @db.Timestamptz
  updated    DateTime  @db.Timestamptz
  tags       Tag[]
  comment    Comment[]
}

model Comment {
  id      Int      @id @default(autoincrement())
  name    String
  email   String
  text    String
  post    Post     @relation(fields: [postId], references: [id])
  postId  Int
  created DateTime @db.Timestamptz
  updated DateTime @db.Timestamptz
}
